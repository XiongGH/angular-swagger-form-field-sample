/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';


export interface IAddress {
    street?: string;
    city?: string;
    state?: string;
    zipcode?: number;
    zipcode2?: number;
}

export class Address extends BaseModel implements IAddress {
    street: string;
    city: string;
    state: string;
    zipcode: number;
    zipcode2: number;

    /** 
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model   
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /** 
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this.street = values.street;
            this.city = values.city;
            this.state = values.state;
            this.zipcode = values.zipcode;
            this.zipcode2 = values.zipcode2;
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                street: new FormControl(this.street, [Validators.minLength(2), ]),
                city: new FormControl(this.city, [Validators.minLength(2), ]),
                state: new FormControl(this.state, [Validators.minLength(1), Validators.maxLength(2), Validators.pattern('^[A-Z]+$'), ]),
                zipcode: new FormControl(this.zipcode, [minValueValidator(1000), maxValueValidator(9999), ]),
                zipcode2: new FormControl(this.zipcode2, [minValueValidator(1000), maxValueValidator(9999), ]),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['street'].setValue(this.street);
            this._formGroup.controls['city'].setValue(this.city);
            this._formGroup.controls['state'].setValue(this.state);
            this._formGroup.controls['zipcode'].setValue(this.zipcode);
            this._formGroup.controls['zipcode2'].setValue(this.zipcode2);
        }
    }
}
